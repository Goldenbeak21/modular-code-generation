name: heart

definitions:
  Cell:
    inputs:
      g: REAL
    outputs:
      v: REAL
      resting: BOOLEAN
      stimulated: BOOLEAN
    parameters:
      C1:
        type: REAL
        default: -8.7
      C2:
        type: REAL
        default: -190.9
      C3:
        type: REAL
        default: -190.4
      C4:
        type: REAL
        default: -23.6
      C5:
        type: REAL
        default: -45.5
      C6:
        type: REAL
        default: -12.9
      C7:
        type: REAL
        default: 777200
      C8:
        type: REAL
        default: 58900
      C9:
        type: REAL
        default: 276600
      C10:
        type: REAL
        default: -6.9
      C11:
        type: REAL
        default: 75.9
      C12:
        type: REAL
        default: 6826.5
      C13:
        type: REAL
        default: -33.2
      C14:
        type: REAL
        default: 20
      C15:
        type: REAL
        default: 2
      V_O:
        type: REAL
        default: 131.1
      V_T:
        type: REAL
        default: 44.5
      V_R:
        type: REAL
        default: 30
      v_n_R_max:
        type: REAL
        default: 0.04
      autorhythmic_rate:
        type: REAL
        default: 0
    locations:
      q0:
        invariant: v < V_T && g < V_T && (pacing_rate <= 0 || t_auto < pacing_rate)
        flow:
          v_x: C1 * v_x
          v_y: C2 * v_y
          v_z: C3 * v_z
          t_auto: 1
        update:
          v: v_x - v_y + v_z
          resting: true
        transitions:
          - to: q1
            guard: pacing_rate > 0 && t_auto >= pacing_rate
            update:
              v_x: V_T * C7 / (C7 - C8 + C9)
              v_y: V_T * C8 / (C7 - C8 + C9)
              v_z: V_T * C9 / (C7 - C8 + C9)
              v: V_T
              theta: 0
              f_theta: f(0)
          - to: q1
            guard: g >= V_T && (pacing_rate <= 0 || t_auto < pacing_rate)
            update:
              v_x: 0.3 * v
              v_y: 0.0 * v
              v_z: 0.7 * v
              theta: v / 44.5
              f_theta: f(v / 44.5)
      q1:
        invariant: v < V_T && g > 0 && (pacing_rate <= 0 || t_auto < pacing_rate)
        flow:
          v_x: C4 * v_x + C7 * g
          v_y: C5 * v_y + C8 * g
          v_z: C6 * v_z + C9 * g
          t_auto: 1
        update:
          v: v_x - v_y + v_z
        transitions:
          - to: q2
            guard: v == V_T || (pacing_rate > 0 && t_auto >= pacing_rate)
            update:
              t_auto: 0
              resting: false
          - to: q0
            guard: g <= 0 && v < V_T && t_auto < pacing_rate
      q2:
        invariant: v < V_O - 80.1 * sqrt(theta)
        flow:
          v_x: C10 * v_x
          v_y: C11 * v_y
          v_z: C12 * v_z
          t_auto: 1
        update:
          v: v_x - v_y + v_z
          stimulated: true
        transitions:
          - to: q3
            guard: v == V_O - 80.1 * sqrt(theta)
            update:
              stimulated: false
      q3:
        invariant: v > V_R
        flow:
          v_x: C13 * v_x * f_theta
          v_y: C14 * v_y * f_theta
          v_z: C15 * v_z
          t_auto: 1
        update:
          v: v_x - v_y + v_z
        transitions:
          - to: q0
            guard: v == V_R
    functions:
      f:
        inputs:
          theta: REAL
        logic: |
          if(theta >= v_n_R_max) {
            return 4.03947
          }

          return 0.29*exp(62.89*theta) + 0.70*exp(-10.99*theta)
      calculate_pacing_rate:
        logic: |
          if(autorhythmic_rate > 0) {
            return 1 / (autorhythmic_rate / 60.0)
          }

          return 0
    initialisation:
      state: q0
      valuations:
        pacing_rate: calculate_pacing_rate()
        resting: true

  Path:
    inputs:
      cell1_v:
        type: REAL
        delayableBy: 1
      cell1_resting:
        type: BOOLEAN
        delayableBy: 1
      cell1_stimulated:
        type: BOOLEAN
        delayableBy: 1
      cell2_v:
        type: REAL
        delayableBy: 1
      cell2_resting:
        type: BOOLEAN
        delayableBy: 1
      cell2_stimulated:
        type: BOOLEAN
        delayableBy: 1
    outputs:
      cell1_v_out: REAL
      cell2_v_out: REAL
    parameters:
      cell1_conduction_time:
        type: REAL
        default: 0.02
      cell1_charge_time:
        type: REAL
        default: 0.01
      cell2_conduction_time:
        type: REAL
        default: 0.02
      cell2_charge_time:
        type: REAL
        default: 0.01
    locations:
      idle:
        invariant: '!cell1_stimulated && !cell2_stimulated'
        update:
          cell1_v_out: output_if_true(cell1_replay, delayed(cell1_v, cell1_conduction_time))
          cell2_v_out: output_if_true(cell2_replay, delayed(cell2_v, cell2_conduction_time))
          cell1_replay: cell1_replay && !delayed(cell1_resting, cell1_conduction_time)
          cell2_replay: cell2_replay && !delayed(cell2_resting, cell2_conduction_time)
        transitions:
          - to: annihilate
            guard: cell1_stimulated && cell2_stimulated
          - to: previous_direction1
            guard: cell1_stimulated && !cell2_stimulated
          - to: previous_direction2
            guard: '!cell1_stimulated && cell2_stimulated'
      previous_direction1:
        invariant: false
        update:
          cell1_v_out: output_if_true(cell1_replay, delayed(cell1_v, cell1_conduction_time))
          cell2_v_out: output_if_true(cell2_replay, delayed(cell2_v, cell2_conduction_time))
          cell1_replay: cell1_replay && !delayed(cell1_resting, cell1_conduction_time)
          cell2_replay: cell2_replay && !delayed(cell2_resting, cell2_conduction_time)
        transitions:
          - to: annihilate
            guard: from_cell == 2 && !delayed(cell2_resting, cell2_conduction_time)
          - to: wait_cell1
            guard: from_cell == 0 || from_cell == 1 || (from_cell == 2 && delayed(cell2_resting, cell2_conduction_time))
      wait_cell1:
        invariant: t < cell1_conduction_time && !cell2_stimulated
        flow:
          t: 1
        update:
          cell1_v_out: output_if_true(cell1_replay, delayed(cell1_v, cell1_conduction_time))
          cell2_v_out: output_if_true(cell2_replay, delayed(cell2_v, cell2_conduction_time))
          cell1_replay: cell1_replay && !delayed(cell1_resting, cell1_conduction_time)
          cell2_replay: cell2_replay && !delayed(cell2_resting, cell2_conduction_time)
        transitions:
          - to: annihilate
            guard: cell2_stimulated
          - to: replay_cell1
            guard: t >= cell1_conduction_time
            update:
              t: 0
              from_cell: 1
              cell1_replay: true
      replay_cell1:
        invariant: t < cell1_charge_time
        flow:
          t: 1
        update:
          cell1_v_out: output_if_true(cell1_replay, delayed(cell1_v, cell1_conduction_time))
          cell2_v_out: output_if_true(cell2_replay, delayed(cell2_v, cell2_conduction_time))
          cell1_replay: cell1_replay && !delayed(cell1_resting, cell1_conduction_time)
          cell2_replay: cell2_replay && !delayed(cell2_resting, cell2_conduction_time)
        transitions:
          - to: idle
            guard: t >= cell1_charge_time
            update:
              t: 0
      previous_direction2:
        invariant: false
        update:
          cell1_v_out: output_if_true(cell1_replay, delayed(cell1_v, cell1_conduction_time))
          cell2_v_out: output_if_true(cell2_replay, delayed(cell2_v, cell2_conduction_time))
          cell1_replay: cell1_replay && !delayed(cell1_resting, cell1_conduction_time)
          cell2_replay: cell2_replay && !delayed(cell2_resting, cell2_conduction_time)
        transitions:
          - to: annihilate
            guard: from_cell == 1 && !delayed(cell1_resting, cell1_conduction_time)
          - to: wait_cell1
            guard: from_cell == 0 || from_cell == 2 || (from_cell == 1 && delayed(cell1_resting, cell1_conduction_time))
      wait_cell2:
        invariant: t < cell2_conduction_time && !cell1_stimulated
        flow:
          t: 1
        update:
          cell1_v_out: output_if_true(cell1_replay, delayed(cell1_v, cell1_conduction_time))
          cell2_v_out: output_if_true(cell2_replay, delayed(cell2_v, cell2_conduction_time))
          cell1_replay: cell1_replay && !delayed(cell1_resting, cell1_conduction_time)
          cell2_replay: cell2_replay && !delayed(cell2_resting, cell2_conduction_time)
        transitions:
          - to: annihilate
            guard: cell1_stimulated
          - to: replay_cell2
            guard: t >= cell2_conduction_time
            update:
              t: 0
              from_cell: 2
              cell2_replay: true
      replay_cell2:
        invariant: t < cell2_charge_time
        flow:
          t: 1
        update:
          cell1_v_out: output_if_true(cell1_replay, delayed(cell1_v, cell1_conduction_time))
          cell2_v_out: output_if_true(cell2_replay, delayed(cell2_v, cell2_conduction_time))
          cell1_replay: cell1_replay && !delayed(cell1_resting, cell1_conduction_time)
          cell2_replay: cell2_replay && !delayed(cell2_resting, cell2_conduction_time)
        transitions:
          - to: idle
            guard: t >= cell2_charge_time
            update:
              t: 0
      annihilate:
        invariant: cell1_stimulated || cell2_stimulated
        update:
          cell1_v_out: output_if_true(cell1_replay, delayed(cell1_v, cell1_conduction_time))
          cell2_v_out: output_if_true(cell2_replay, delayed(cell2_v, cell2_conduction_time))
          cell1_replay: cell1_replay && !delayed(cell1_resting, cell1_conduction_time)
          cell2_replay: cell2_replay && !delayed(cell2_resting, cell2_conduction_time)
        transitions:
          - to: idle
            guard: '!cell1_stimulated && !cell2_stimulated'
    functions:
      output_if_true:
        inputs:
          test: BOOLEAN
          value: REAL
        logic: |
          if(test) {
            return value
          }

          return 0
    initialisation:
      state: idle


instances:
  SA:
    type: Cell
    parameters:
      C14: 20
      autorhythmic_rate: 100
  BB:
    type: Cell
    parameters:
      C14: 20
  LA:
    type: Cell
    parameters:
      C14: 20
  LA1:
    type: Cell
    parameters:
      C14: 20
  RA:
    type: Cell
    parameters:
      C14: 20
  RA1:
    type: Cell
    parameters:
      C14: 20
  CS:
    type: Cell
    parameters:
      C14: 20
  CT:
    type: Cell
    parameters:
      C14: 20
  CT1:
    type: Cell
    parameters:
      C14: 20
  OS:
    type: Cell
    parameters:
      C14: 20
  Fast:
    type: Cell
    parameters:
      C14: 18
  Fast1:
    type: Cell
    parameters:
      C14: 18
  Slow:
    type: Cell
    parameters:
      C14: 20
  Slow1:
    type: Cell
    parameters:
      C14: 20
  AV:
    type: Cell
    parameters:
      C14: 20
      autorhythmic_rate: 60
  BH:
    type: Cell
    parameters:
      C14: 11
  BH1:
    type: Cell
    parameters:
      C14: 11
  BH2:
    type: Cell
    parameters:
      C14: 11
  LBB:
    type: Cell
    parameters:
      C14: 11
      autorhythmic_rate: 32
  LBB1:
    type: Cell
    parameters:
      C14: 11
      autorhythmic_rate: 32
  LVA:
    type: Cell
    parameters:
      C14: 11
  LV:
    type: Cell
    parameters:
      C14: 11
  LV1:
    type: Cell
    parameters:
      C14: 11
  LVS:
    type: Cell
    parameters:
      C14: 11
  LVS1:
    type: Cell
    parameters:
      C14: 11
  CSLV:
    type: Cell
    parameters:
      C14: 11
  RBB:
    type: Cell
    parameters:
      C14: 11
      autorhythmic_rate: 32
  RBB1:
    type: Cell
    parameters:
      C14: 11
      autorhythmic_rate: 32
  RVA:
    type: Cell
    parameters:
      C14: 11
  RV:
    type: Cell
    parameters:
      C14: 11
  RV1:
    type: Cell
    parameters:
      C14: 11
  RVS:
    type: Cell
    parameters:
      C14: 11
  RVS1:
    type: Cell
    parameters:
      C14: 11

  SA_BB:
    type: Path
  SA_OS:
    type: Path
  SA_RA:
    type: Path
  SA_CT:
    type: Path
  BB_LA:
    type: Path
    parameters:
      cell1_conduction_time: 0.03
      cell2_conduction_time: 0.03
  LA_LA1:
    type: Path
    parameters:
      cell1_conduction_time: 0.04
      cell2_conduction_time: 0.04
  RA_RA1:
    type: Path
  RA1_CS:
    type: Path
  CT_CT1:
    type: Path
  OS_Fast:
    type: Path
  Fast_Fast1:
    type: Path
  Fast1_AV:
    type: Path
    parameters:
      cell1_conduction_time: 0.01
      cell2_conduction_time: 0.01
  OS_Slow:
    type: Path
    parameters:
      cell1_conduction_time: 0.03
      cell2_conduction_time: 0.03
  Slow_Slow1:
    type: Path
    parameters:
      cell1_conduction_time: 0.03
      cell2_conduction_time: 0.03
  Slow1_AV:
    type: Path
    parameters:
      cell1_conduction_time: 0.015
      cell2_conduction_time: 0.015
  AV_His:
    type: Path
    parameters:
      cell1_conduction_time: 0.03
      cell2_conduction_time: 0.03
  His_His1:
    type: Path
  His1_His2:
    type: Path
  His2_LBB:
    type: Path
  LBB_LBB1:
    type: Path
    parameters:
      cell1_conduction_time: 0.005
      cell2_conduction_time: 0.005
  LBB1_LVA:
    type: Path
    parameters:
      cell1_conduction_time: 0.005
      cell2_conduction_time: 0.005
  His2_RBB:
    type: Path
  RBB_RBB1:
    type: Path
    parameters:
      cell1_conduction_time: 0.005
      cell2_conduction_time: 0.005
  RBB1_RVA:
    type: Path
    parameters:
      cell1_conduction_time: 0.005
      cell2_conduction_time: 0.005
  LVA_RVA:
    type: Path
    parameters:
      cell1_conduction_time: 0.005
      cell2_conduction_time: 0.005
  LVA_LV:
    type: Path
  LV_LV1:
    type: Path
    parameters:
      cell1_conduction_time: 0.03
      cell2_conduction_time: 0.03
  LVA_LVS:
    type: Path
    parameters:
      cell1_conduction_time: 0.015
      cell2_conduction_time: 0.015
  LVS_LVS1:
    type: Path
    parameters:
      cell1_conduction_time: 0.015
      cell2_conduction_time: 0.015
  LVS1_CSLV:
    type: Path
  RVA_RV:
    type: Path
    parameters:
      cell1_conduction_time: 0.01
      cell2_conduction_time: 0.01
  RV_RV1:
    type: Path
  RVA_RVS:
    type: Path
    parameters:
      cell1_conduction_time: 0.015
      cell2_conduction_time: 0.015
  RVS_RVS1:
    type: Path

mappings:
  SA_BB.cell1_v: SA.v
  SA_BB.cell1_resting: SA.resting
  SA_BB.cell1_stimulated: SA.stimulated

codegenConfig:
  execution:
    stepSize: 0.001
    simulationTime: 10
  logging:
    file: out.csv
    fields:
      - SA.v
      - RA.v
      - OS.v
      - Fast.v
      - AV.v
      - His.v
      - RBB.v
      - RVA.v
      - RV.v
  parametrisationMethod: RUN_TIME
  maximumInterTransitions: 1
  requireOneIntraTransitionPerTick: false
